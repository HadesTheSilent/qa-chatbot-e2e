name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    # We'll use docker-compose to start Postgres + API + frontend/backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies for API
      working-directory: ./atendimentos-api
      run: npm ci

    - name: Install dependencies for chatbot backend
      working-directory: ./chatbot-sut/backend
      run: npm ci

    - name: Install dependencies for chatbot frontend
      working-directory: ./chatbot-sut/frontend
      run: npm ci

    - name: Install dependencies for Cypress tests
      working-directory: ./chatbot-sut
      run: npm ci

    - name: Start all services with docker compose
      run: |
        # Build and start containers defined in repo docker-compose.yml
        docker compose up -d --build
        echo "docker compose started containers"

    - name: Wait for services to be ready
      run: |
        # Wait for Postgres
        for i in $(seq 1 60); do
          if (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1; then
            echo "Postgres reachable"
            break
          fi
          echo "Waiting for Postgres... ($i)"
          sleep 1
        done

        # Wait for Atendimentos API (5000)
        for i in $(seq 1 60); do
          if (echo > /dev/tcp/127.0.0.1/5000) >/dev/null 2>&1; then
            echo "Atendimentos API reachable on 5000"
            break
          fi
          echo "Waiting for API... ($i)"
          sleep 1
        done

        # Wait for Chatbot backend (4000)
        for i in $(seq 1 60); do
          if (echo > /dev/tcp/127.0.0.1/4000) >/dev/null 2>&1; then
            echo "Chatbot backend reachable on 4000"
            break
          fi
          echo "Waiting for chatbot backend... ($i)"
          sleep 1
        done

        # Wait for frontend (80)
        for i in $(seq 1 60); do
          if (echo > /dev/tcp/127.0.0.1/80) >/dev/null 2>&1; then
            echo "Frontend reachable on 80"
            break
          fi
          echo "Waiting for frontend... ($i)"
          sleep 1
        done

    - name: Install Newman
      run: npm install -g newman

    - name: Run Postman tests
      working-directory: ./atendimentos-api
      run: |
        echo '{
          "id": "env-atendimentos-ci",
          "name": "Atendimentos Environment CI",
          "values": [
            {
              "key": "baseUrl",
              "value": "http://localhost:5000",
              "enabled": true
            }
          ]
        }' > postman_environment_ci.json
        newman run postman_collection.json --environment postman_environment_ci.json

    - name: Run Cypress tests
      working-directory: ./chatbot-sut
      env:
        CYPRESS_BASE_URL: http://localhost
      run: npm test

    - name: Dump docker logs
      if: always()
      run: |
        docker compose logs --no-color > docker-logs.txt || true

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          chatbot-sut/cypress/videos/**
          chatbot-sut/cypress/screenshots/**
          docker-logs.txt
        if-no-files-found: ignore

    - name: Tear down docker compose
      if: always()
      run: |
        docker compose down -v || true